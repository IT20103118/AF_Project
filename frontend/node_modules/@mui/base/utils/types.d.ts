<<<<<<< HEAD
/// <reference types="react" />
export declare type EventHandlers = Record<string, React.EventHandler<any>>;
export declare type WithOptionalOwnerState<T extends {
    ownerState: unknown;
}> = Omit<T, 'ownerState'> & Partial<Pick<T, 'ownerState'>>;
export declare type SlotComponentProps<TSlotComponent extends React.ElementType, TOverrides, TOwnerState> = (React.ComponentPropsWithRef<TSlotComponent> & TOverrides) | ((ownerState: TOwnerState) => React.ComponentPropsWithRef<TSlotComponent> & TOverrides);
=======
/// <reference types="react" />
export declare type EventHandlers = Record<string, React.EventHandler<any>>;
export declare type WithOptionalOwnerState<T extends {
    ownerState: unknown;
}> = Omit<T, 'ownerState'> & Partial<Pick<T, 'ownerState'>>;
export declare type SlotComponentProps<TSlotComponent extends React.ElementType, TOverrides, TOwnerState> = (React.ComponentPropsWithRef<TSlotComponent> & TOverrides) | ((ownerState: TOwnerState) => React.ComponentPropsWithRef<TSlotComponent> & TOverrides);
>>>>>>> 3fa40f2c6207433ee942ad812d5449d120e99986
