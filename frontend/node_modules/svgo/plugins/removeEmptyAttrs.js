'use strict';

<<<<<<< HEAD
exports.type = 'perItem';

exports.active = true;

=======
const { attrsGroups } = require('./_collections.js');

exports.type = 'visitor';
exports.name = 'removeEmptyAttrs';
exports.active = true;
>>>>>>> 3fa40f2c6207433ee942ad812d5449d120e99986
exports.description = 'removes empty attributes';

/**
 * Remove attributes with empty values.
 *
<<<<<<< HEAD
 * @param {Object} item current iteration item
 * @return {Boolean} if false, item will be filtered out
 *
 * @author Kir Belevich
 */
exports.fn = function(item) {

    if (item.elem) {

        item.eachAttr(function(attr) {
            if (attr.value === '') {
                item.removeAttr(attr.name);
            }
        });

    }

=======
 * @author Kir Belevich
 *
 * @type {import('../lib/types').Plugin<void>}
 */
exports.fn = () => {
  return {
    element: {
      enter: (node) => {
        for (const [name, value] of Object.entries(node.attributes)) {
          if (
            value === '' &&
            // empty conditional processing attributes prevents elements from rendering
            attrsGroups.conditionalProcessing.includes(name) === false
          ) {
            delete node.attributes[name];
          }
        }
      },
    },
  };
>>>>>>> 3fa40f2c6207433ee942ad812d5449d120e99986
};
